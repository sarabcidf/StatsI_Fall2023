type = "latex",
dep.var.caption = "Model1Res",
dep.var.labels.include = FALSE,
column.labels = c("Intercept", "Model2Res"),
covariate.labels = c("Constant", "Model2Res"),
omit = "Constant",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
ggsave("plot1.png", plot = plot1, dpi = 300,
height = 4,
width = 6)
ggsave("plot1.png", plot = plot1, dpi = 300,
height = 3,
width = 6)
#### Libraries, options, wd, clearing ####
# setting wd for current folder (github fork folder)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# clearing
rm(list=ls())
# f to detach all libraries -> avoid conflicts; clear environment
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# f to load libraries -> checks if they are installed, if not it installs and loads
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# loading -> checking, installing and loading several packages in one line
# I will be using stringr, tidyverse and also stargazer to report regression results in latex
lapply(c("stringr","tidyverse","stargazer"), pkgTest)
#### Reading and exploring data ####
# reading in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/incumbents_subset.csv")
head(inc.sub)
summary(inc.sub)
#### Question 1 ####
# Creating model using lm (I have used lm a lot in the past):
model1 <- lm(voteshare~difflog, inc.sub)
# Exploring model
summary(model1)
# Saving residuals separately:
resid1 <- model1$residuals
# And creating the scatterplot using ggplot:
plot1 <- ggplot(inc.sub, aes(x = difflog, y = voteshare)) +
geom_point(color = "darkslategray4", alpha = 0.7) +  # Editing point color and transparency
geom_smooth(method = "lm", se = FALSE, color = "grey") +  # Adding regression line (no SE)
theme_minimal() +  # Applying theme
labs(x = "Difference in campaign spending between incumbent and challenger",
y = "Incumbent vote Share",
title = "Scatterplot with Regression Line, Model 1") + # Fixing labels
theme(panel.grid = element_blank())  # Getting rid of the grid
# Saving plot to report in pdf:
ggsave("plot1.png", plot = plot1, dpi = 300,
height = 3,
width = 6)
# Generating code to report regression results in pdf:
# I checked this documentation a lot: https://cran.r-project.org/web/packages/stargazer/vignettes/stargazer.pdf
# To make the variable names nice and to get rid of information that stargazer includes by default but we
# may not be interested in.
stargazer(
model1,
title = "Model 1 Regression Results",
type = "latex",
dep.var.caption = "VoteSh",
dep.var.labels.include = FALSE,
column.labels = c("Intercept", "DiffLog"),
covariate.labels = c("Constant", "DiffLog"),
omit = "Constant",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
#### Question 2 ####
# Creating and exploring model:
model2 <- lm(presvote~difflog, inc.sub)
summary(model2)
# Saving residuals separately:
resid2 <- model2$residuals
# And creating the scatterplot using ggplot:
plot2 <- ggplot(inc.sub, aes(x = difflog, y = presvote)) +
geom_point(color = "darkseagreen4", alpha = 0.7) +  # Editing point color and transparency
geom_smooth(method = "lm", se = FALSE, color = "grey") +  # Adding regression line (no SE)
theme_minimal() +  # Applying theme
labs(x = "Difference in campaign spending between incumbent and challenger",
y = "Presidential candidate vote share (incumbent's party)",
title = "Scatterplot with Regression Line, Model 2") + # Fixing labels
theme(panel.grid = element_blank())  # Getting rid of the grid
#Saving plot:
ggsave("plot2.png", plot = plot2, dpi = 300,
height = 3,
width = 6)
# Generating code to report regression results in pdf:
stargazer(
model2,
title = "Model 2 Regression Results",
type = "latex",
dep.var.caption = "PresVote",
dep.var.labels.include = FALSE,
column.labels = c("Intercept", "DiffLog"),
covariate.labels = c("Constant", "DiffLog"),
omit = "Constant",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
#### Question 3 ####
# Creating and exploring model:
model3 <- lm(voteshare~presvote, inc.sub)
summary(model3)
# Creating the scatterplot using ggplot:
plot3 <- ggplot(inc.sub, aes(x = presvote, y = voteshare)) +
geom_point(color = "lightpink4", alpha = 0.7) +  # Editing point color and transparency
geom_smooth(method = "lm", se = FALSE, color = "grey") +  # Adding regression line (no SE)
theme_minimal() +  # Applying theme
labs(x = "Presidential candidate vote share (incumbent's party)",
y = "Incumbent's vote share",
title = "Scatterplot with Regression Line, Model 3") + # Fixing labels
theme(panel.grid = element_blank())  # Getting rid of the grid
#Saving plot:
ggsave("plot3.png", plot = plot3, dpi = 300,
height = 3,
width = 6)
# Generating code to report regression results in pdf:
stargazer(
model3,
title = "Model 3 Regression Results",
type = "latex",
dep.var.caption = "PresVote",
dep.var.labels.include = FALSE,
column.labels = c("Intercept", "VoteSh"),
covariate.labels = c("Constant", "VoteSh"),
omit = "Constant",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
#### Question 4 ####
# Creating and exploring model:
model4 <- lm(resid1~resid2, inc.sub)
summary(model4)
# Creating the scatterplot using ggplot:
plot4 <- ggplot(inc.sub, aes(x = resid2, y = resid1)) +
geom_point(color = "thistle3", alpha = 0.7) +  # Editing point color and transparency
geom_smooth(method = "lm", se = FALSE, color = "grey") +  # Adding regression line (no SE)
theme_minimal() +  # Applying theme
labs(x = "Residuals from Q2: Variation in PresVote not explained by difference in spending",
y = "Residuals from Q1: Variation in VoteShare not explained by difference in spending",
title = "Scatterplot with Regression Line, Model 4") + # Fixing labels
theme(panel.grid = element_blank())  # Getting rid of the grid
#Saving plot:
ggsave("plot4.png", plot = plot4, dpi = 300,
height = 3,
width = 6)
# Generating code to report regression results in pdf:
stargazer(
model4,
title = "Model 4 Regression Results",
type = "latex",
dep.var.caption = "Model1Res",
dep.var.labels.include = FALSE,
column.labels = c("Intercept", "Model2Res"),
covariate.labels = c("Constant", "Model2Res"),
omit = "Constant",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
#### Question 5 ####
# Creating and exploring model:
model5 <- lm(voteshare~difflog+presvote, inc.sub)
summary(model5)
# Comparing Model 4 and Model 5:
# I think the residuals between the two models are going to be the same
# I will check for this.
# Naming my residuals from both models:
resid4 <- model4$residuals
resid5 <- model5$residuals
# I see here I can use the function identical (https://statisticsglobe.com/compare-vectors-and-find-differences-in-r)
identical(resid4,resid5) # Not identical
# But perhaps they are not identical to the very last decimal point,
# however if I give a certain tolerance level (for example 0.001)
# the residuals will be the same.
# Here I see how to create the following function to compare each element
# in my residuals vectors, allowing for a small difference between them
# (https://stackoverflow.com/questions/49237304/compare-two-vectors-of-numbers-based-on-threshold-of-tolerance-Â±-of-0-5)
# And I just have to sum the output
sum(mapply(function(element1, element2) abs(element1 - element2) <= 0.001,
resid4, resid5))
# Double checking residuals length -> this means all residuals in M4 and M5 are the same
length(resid4)
length(resid5)
# Generating code to report regression results in pdf:
stargazer(
model5,
title = "Model 5 Regression Results",
type = "latex",
dep.var.caption = "VoteSh",
dep.var.labels.include = FALSE,
column.labels = c("Intercept", "DiffLog","PresVote"),
covariate.labels = c("Constant", "DiffLog","PresVote"),
omit = "Constant",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
# Exploring model
summary(model1)
stargazer(
model1,
title = "Model 1 Regression Results",
type = "latex",
dep.var.caption = "VoteSh",
dep.var.labels.include = FALSE,
covariate.labels = c("Intercept", "DiffLog"),
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
stargazer(
model1,
title = "Model 1 Regression Results",
type = "latex",
dep.var.caption = "VoteSh",
dep.var.labels.include = FALSE,
covariate.labels = "DiffLog",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
stargazer(
model2,
title = "Model 2 Regression Results",
type = "latex",
dep.var.caption = "PresVote",
dep.var.labels.include = FALSE,
covariate.labels = "DiffLog",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
stargazer(
model3,
title = "Model 3 Regression Results",
type = "latex",
dep.var.caption = "PresVote",
dep.var.labels.include = FALSE,
covariate.labels = "VoteSh",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
stargazer(
model3,
title = "Model 3 Regression Results",
type = "latex",
dep.var.caption = "VoteSh",
dep.var.labels.include = FALSE,
covariate.labels = "PresVote",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
stargazer(
model4,
title = "Model 4 Regression Results",
type = "latex",
dep.var.caption = "Model1Res",
dep.var.labels.include = FALSE,
covariate.labels = "Model2Res",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
stargazer(
model4,
title = "Model 4 Regression Results",
type = "latex",
dep.var.caption = "Model1Res",
dep.var.labels.include = FALSE,
covariate.labels = "Model2Res",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
stargazer(
model5,
title = "Model 5 Regression Results",
type = "latex",
dep.var.caption = "VoteSh",
dep.var.labels.include = FALSE,
covariate.labels = c("DiffLog","PresVote"),
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
install.packages("patchwork")
library(patchwork)
combined_plots <- plot1 / plot2 / plot3 / plot4
# Set the layout parameters (optional)
combined_plots <- combined_plots + plot_layout(ncol = 2)
# Save the combined plot
ggsave("combined_plots.png", combined_plots, width = 10, height = 20, dpi = 300)
# Save the combined plot
ggsave("combined_plots.png", combined_plots, width = 10, height = 16, dpi = 300)
model1 <- lm(voteshare~difflog, inc.sub)
# Exploring model
summary(model1)
model2 <- lm(presvote~difflog, inc.sub)
summary(model2)
plot2 <- ggplot(inc.sub, aes(x = difflog, y = presvote)) +
geom_point(color = "darkseagreen4", alpha = 0.7) +  # Editing point color and transparency
geom_smooth(method = "lm", se = FALSE, color = "grey") +  # Adding regression line (no SE)
theme_minimal() +  # Applying theme
labs(x = "Difference in campaign spending between incumbent and challenger",
y = "Presidential candidate vote \n share (incumbent's party)",
title = "Scatterplot with Regression Line, Model 2") + # Fixing labels
theme(panel.grid = element_blank())  # Getting rid of the grid
plot 2
plot2
plot4 <- ggplot(inc.sub, aes(x = resid2, y = resid1)) +
geom_point(color = "thistle3", alpha = 0.7) +  # Editing point color and transparency
geom_smooth(method = "lm", se = FALSE, color = "grey") +  # Adding regression line (no SE)
theme_minimal() +  # Applying theme
labs(x = "Residuals from Q2: Variation in PresVote \n not explained by difference in spending",
y = "Residuals from Q1: Variation in VoteShare not explained by difference in spending",
title = "Scatterplot with Regression Line, Model 4") + # Fixing labels
theme(panel.grid = element_blank())  # Getting rid of the grid
plot4
plot4 <- ggplot(inc.sub, aes(x = resid2, y = resid1)) +
geom_point(color = "thistle3", alpha = 0.7) +  # Editing point color and transparency
geom_smooth(method = "lm", se = FALSE, color = "grey") +  # Adding regression line (no SE)
theme_minimal() +  # Applying theme
labs(x = "Residuals from Q2: Variation in PresVote not explained by difference in spending",
y = "Residuals from Q1: Variation in VoteShare \n not explained by difference in spending",
title = "Scatterplot with Regression Line, Model 4") + # Fixing labels
theme(panel.grid = element_blank())  # Getting rid of the grid
View(plot4)
plot4
model3 <- lm(voteshare~presvote, inc.sub)
summary(model3)
model4 <- lm(resid1~resid2, inc.sub)
summary(model4)
model5 <- lm(voteshare~difflog+presvote, inc.sub)
summary(model5)
inc.sub %>% cor(difflog,presvote)
cor(inc.sub$difflog,inc.sub$presvote)
#### Question 1 ####
# Creating model using lm (I have used lm a lot in the past):
model1 <- lm(voteshare~difflog, inc.sub)
# Exploring model
summary(model1)
# Saving residuals separately:
resid1 <- model1$residuals
# And creating the scatterplot using ggplot (geom_smooth does do the same as abline):
plot1 <- ggplot(inc.sub, aes(x = difflog, y = voteshare)) +
geom_point(color = "darkslategray4", alpha = 0.7) +  # Editing point color and transparency
geom_smooth(method = "lm", se = FALSE, color = "grey") +  # Adding regression line (no SE)
theme_minimal() +  # Applying theme
labs(x = "Difference in campaign spending between incumbent and challenger",
y = "Incumbent vote Share",
title = "Scatterplot with Regression Line, Model 1") + # Fixing labels
theme(panel.grid = element_blank())  # Getting rid of the grid
# Saving plot to report in pdf:
ggsave("plot1.png", plot = plot1, dpi = 300,
height = 3,
width = 6)
# Generating code to report regression results in pdf:
# I checked this documentation a lot: https://cran.r-project.org/web/packages/stargazer/vignettes/stargazer.pdf
# To make the variable names nice and to get rid of information that stargazer includes by default but we
# may not be interested in.
stargazer(
model1,
title = "Model 1 Regression Results",
type = "latex",
dep.var.caption = "VoteSh",
dep.var.labels.include = FALSE,
covariate.labels = "DiffLog",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
#### Question 2 ####
# Creating and exploring model:
model2 <- lm(presvote~difflog, inc.sub)
summary(model2)
# Saving residuals separately:
resid2 <- model2$residuals
# And creating the scatterplot using ggplot:
plot2 <- ggplot(inc.sub, aes(x = difflog, y = presvote)) +
geom_point(color = "darkseagreen4", alpha = 0.7) +  # Editing point color and transparency
geom_smooth(method = "lm", se = FALSE, color = "grey") +  # Adding regression line (no SE)
theme_minimal() +  # Applying theme
labs(x = "Difference in campaign spending between incumbent and challenger",
y = "Presidential candidate vote \n share (incumbent's party)",
title = "Scatterplot with Regression Line, Model 2") + # Fixing labels
theme(panel.grid = element_blank())  # Getting rid of the grid
#Saving plot:
ggsave("plot2.png", plot = plot2, dpi = 300,
height = 3,
width = 6)
# Generating code to report regression results in pdf:
stargazer(
model2,
title = "Model 2 Regression Results",
type = "latex",
dep.var.caption = "PresVote",
dep.var.labels.include = FALSE,
covariate.labels = "DiffLog",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
#### Question 3 ####
# Creating and exploring model:
model3 <- lm(voteshare~presvote, inc.sub)
summary(model3)
# Creating the scatterplot using ggplot:
plot3 <- ggplot(inc.sub, aes(x = presvote, y = voteshare)) +
geom_point(color = "lightpink4", alpha = 0.7) +  # Editing point color and transparency
geom_smooth(method = "lm", se = FALSE, color = "grey") +  # Adding regression line (no SE)
theme_minimal() +  # Applying theme
labs(x = "Presidential candidate vote share (incumbent's party)",
y = "Incumbent's vote share",
title = "Scatterplot with Regression Line, Model 3") + # Fixing labels
theme(panel.grid = element_blank())  # Getting rid of the grid
#Saving plot:
ggsave("plot3.png", plot = plot3, dpi = 300,
height = 3,
width = 6)
# Generating code to report regression results in pdf:
stargazer(
model3,
title = "Model 3 Regression Results",
type = "latex",
dep.var.caption = "VoteSh",
dep.var.labels.include = FALSE,
covariate.labels = "PresVote",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
#### Question 4 ####
# Creating and exploring model:
model4 <- lm(resid1~resid2, inc.sub)
summary(model4)
# Creating the scatterplot using ggplot:
plot4 <- ggplot(inc.sub, aes(x = resid2, y = resid1)) +
geom_point(color = "thistle3", alpha = 0.7) +  # Editing point color and transparency
geom_smooth(method = "lm", se = FALSE, color = "grey") +  # Adding regression line (no SE)
theme_minimal() +  # Applying theme
labs(x = "Residuals from Q2: Variation in PresVote not explained by difference in spending",
y = "Residuals from Q1: Variation in VoteShare \n not explained by difference in spending",
title = "Scatterplot with Regression Line, Model 4") + # Fixing labels
theme(panel.grid = element_blank())  # Getting rid of the grid
#Saving plot:
ggsave("plot4.png", plot = plot4, dpi = 300,
height = 3,
width = 6)
# Generating code to report regression results in pdf:
stargazer(
model4,
title = "Model 4 Regression Results",
type = "latex",
dep.var.caption = "Model1Res",
dep.var.labels.include = FALSE,
covariate.labels = "Model2Res",
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
#### Question 5 ####
# Creating and exploring model:
model5 <- lm(voteshare~difflog+presvote, inc.sub)
summary(model5)
# Generating code to report regression results in pdf:
stargazer(
model5,
title = "Model 5 Regression Results",
type = "latex",
dep.var.caption = "VoteSh",
dep.var.labels.include = FALSE,
covariate.labels = c("DiffLog","PresVote"),
omit.stat = c("ser","f"),
star.cutoffs = c(0.05, 0.01, 0.001)
)
# Comparing Model 4 and Model 5:
# I think the residuals between the two models are going to be the same
# I will check for this.
# Naming my residuals from both models:
resid4 <- model4$residuals
resid5 <- model5$residuals
# I see in statisticsglobe (link provided below in R script) that I use identical()
# to compare
identical(resid4,resid5) # Not identical
# But perhaps they are not identical to the very last decimal point,
# however if I give a certain tolerance level (for example 0.001)
# the residuals will be the same.
# I see in stackoverflow (link provided below in R script)
# how to create the following function to compare each element
# in my residuals vectors, allowing for a small difference between them
# And I just have to sum the output
sum(mapply(function(element1, element2) abs(element1 - element2) <= 0.001,
resid4, resid5))
# Double checking residuals length -> this means all residuals in M4 and M5 are the same
length(resid4)
length(resid5)
# Statisticsglobe link:
# https://statisticsglobe.com/compare-vectors-and-find-differences-in-r
# Stackoverflow link:
# https://stackoverflow.com/questions/49237304/compare-two-vectors-of-numbers-based-on-threshold-of-tolerance-Â±-of-0-5
plot1
plot2
plot3
plot4
plot5
install.packages("csodata")
library(csodata)
toc <- cso_get_toc()
toc <- cso_get_toc()
unemployment=cso_get_data("MUM01")
source("~/Desktop/Helena.R")
